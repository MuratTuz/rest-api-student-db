{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Student Rest API with Swagger",
    "description": "Documentation generated by the <b><i>swagger-autogen</i></b> module"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Student",
      "description": "Student data"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application.json"
  ],
  "produces": [
    "application.json"
  ],
  "paths": {
    "/students/": {
      "get": {
        "tags": [
          "Student"
        ],
        "description": "GET all students",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Student"
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "An array of the all students"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Student"
        ],
        "description": "Register a new student",
        "parameters": [
          {
            "name": "newStudent",
            "in": "body",
            "description": "New student data",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string",
                  "example": "Tom"
                },
                "lastname": {
                  "type": "string",
                  "example": "Clement"
                },
                "classname": {
                  "type": "string",
                  "example": "B2"
                },
                "age": {
                  "type": "number",
                  "example": 7
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New registered student",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/students/name/{name}": {
      "get": {
        "tags": [
          "Student"
        ],
        "description": "GET student by firstname or lastname",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Student name existed in the database"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Student"
            },
            "description": "Student requested by id"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/students/id/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "description": "GET student by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Student name existed in the database"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Student"
            },
            "description": "Student requested by id"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/students/{id}": {
      "put": {
        "tags": [
          "Student"
        ],
        "description": "Update a stundet data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Student id existed in the database"
          },
          {
            "name": "newStudent",
            "in": "body",
            "description": "New data for updating an existed student",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string",
                  "example": "Tom"
                },
                "lastname": {
                  "type": "string",
                  "example": "Clement"
                },
                "classname": {
                  "type": "string",
                  "example": "B2"
                },
                "age": {
                  "type": "number",
                  "example": 7
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Updated student",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Student"
        ],
        "description": "DELETE a student by id ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Student id existed in the database"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Student": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "firstname": {
          "type": "string",
          "example": "Tom"
        },
        "lastname": {
          "type": "string",
          "example": "Clement"
        },
        "classname": {
          "type": "string",
          "example": "A1"
        },
        "age": {
          "type": "number",
          "example": 7
        }
      }
    },
    "Students": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Student"
      }
    }
  }
}